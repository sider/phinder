#!/usr/bin/env php
<?php

require_once __DIR__.'/../lib/token.php';

require_once __DIR__.'/../lib/regex.php';

$content = file_get_contents($argv[1]);

$tokens = findTokens($content);

$regex = buildRegex($tokens);

echo '<?php';
?>


namespace Phinder\Pattern;

class Lexer
{
    private static $_regex = "/<?php echo $regex; ?>/";

    private $_string;

    public function __construct($string)
    {
        $this->_string = $string;
    }

    public function getToken(&$val)
    {
        while ($this->_string != "") {
            $matches = [];
            if (preg_match(self::$_regex, $this->_string, $matches)) {
                if (strlen(trim($matches[0])) === 0) {
                    $this->_string = substr($this->_string, strlen($matches[0]));
                    continue;
                }
<?php foreach ($tokens as $token): ?>
                if ($matches['<?php echo $token['name']; ?>'] !== '') {
                    $val = $matches['<?php echo $token['name']; ?>'];
                    $this->_string = substr($this->_string, strlen($val));

                    return Parser::<?php echo $token['name']; ?>;
                }
<?php endforeach; ?>
            }

            return Parser::YYERRTOK;
        }
        return false;
    }
}
